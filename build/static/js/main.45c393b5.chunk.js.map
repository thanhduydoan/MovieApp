{"version":3,"sources":["components/Navbar/Navbar.js","components/Banner/Banner.js","requests.js","components/MovieDetail/MovieDetail.js","components/MovieList/MovieList.js","pages/browse/Browse.jsx","components/SearchResult/SearchResult.js","pages/search/Search.jsx","App.js","serviceWorker.js","index.js"],"names":["Navbar","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","isScrolled","setIsScrolled","useEffect","handleScroll","window","scrollY","addEventListener","removeEventListener","React","createElement","className","onClick","fill","aria-hidden","data-prefix","data-icon","role","xmlns","viewBox","d","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","Banner","props","data","setData","_ref","_asyncToGenerator","_callee","response","_data","randomIndex","_context","fetch","json","results","Math","floor","random","t0","console","log","apply","arguments","fetchData","style","backgroundSize","backgroundImage","concat","backdrop_path","backgroundPosition","title","original_name","overview","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","fetchSearch","opts","height","width","playerVars","autoplay","MovieDetail","movieData","movieTrailer","release_date","vote_average","poster_path","YouTube","videoId","src","alt","MovieLists","fetchUrl","isLargeRow","movies","setMovies","_useState3","_useState4","selectingMovie","setSelectingMovie","_useState5","_useState6","trailerId","setTralerId","_ref2","request","handleClick","_ref3","_callee2","movie","url","urlParams","_context2","URLSearchParams","URL","search","get","_x","map","id","Browse","MovieList","SearchResult","videoTrailer","setVideoTrailer","selectedMovie","setSelectedMovie","_fetchSearch","_fetchTrailer","trailers","trailer","filter","site","find","video","fetchTrailer","Fragment","Search","query","setQuery","searchInput","setSearchInput","onChange","e","target","FontAwesomeIcon","icon","faSearch","preventDefault","handleReset","handleSearch","App","BrowserRouter","Routes","Route","path","element","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","process","href","origin","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.45c393b5.chunk.js","sourcesContent":["// hooks của React để quản lý state và lifecycle của Component.\nimport React, { useState, useEffect } from \"react\";\nimport './Nabar.css'\n//hook useNavigate của react-router-dom để có thể điều hướng giữa các trang trong ứng dụng.\nimport { useNavigate } from \"react-router-dom\";\nconst Navbar = () => {\n  const navigate = useNavigate();\n  const handleHomePage = () => {\n    navigate(`/`);\n  };\n  const handleSeachPage = () => {\n    navigate(`/search`);\n  };\n  const [isScrolled, setIsScrolled] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      if (window.scrollY > 100) {\n        setIsScrolled(true);\n      } else {\n        setIsScrolled(false);\n      }\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n\n  return (\n    <nav className={isScrolled ? \"navbar scrolled\" : \"navbar\"}>\n        <span onClick={handleHomePage} className=\"title\">Movie App</span>\n        <svg\n        onClick={handleSeachPage}\n            className='search-icon'\n            fill='#ccc'\n            aria-hidden='true'\n            data-prefix='fas'\n            data-icon='search'\n            role='img'\n            xmlns='http://www.w3.org/2000/svg'\n            viewBox='0 0 512 512'>\n            <path d='M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z'></path>\n        </svg>\n    </nav>\n  );\n};\n\nexport default Navbar;","import React, { useEffect, useState } from 'react';\nimport './Banner.css';\n\nconst Banner = (props) => {\n\tconst [data, setData] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\ttry {\n\t\t\t\tconst response = await fetch('https://api.themoviedb.org/3/discover/tv?api_key=c0cf4110241b44ed8625fe1ae1805076&with_network=123');\n\t\t\t\tconst data = await response.json();\n\t\t\t\t// lấy ngẫu nhiên một bộ phim trong array\n\t\t\t\tif (data.results && data.results.length > 0) {\n\t\t\t\t\tconst randomIndex = Math.floor(Math.random() * data.results.length - 1);\n\t\t\t\t\tsetData(data.results[randomIndex]);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t};\n\t\tfetchData();\n\t}, []);\n\n\treturn (\n\t\t<header\n\t\t\tclassName=\"banner\"\n\t\t\tstyle={{\n\t\t\t\tbackgroundSize: \"cover\",\n\t\t\t\tbackgroundImage: `url(\"https://image.tmdb.org/t/p/original/${data?.backdrop_path}\")`,\n\t\t\t\tbackgroundPosition: \"center center\",\n\t\t\t}}>\n\t\t\t<div className=\"banner__contents\">\n\t\t\t\t<h1 className=\"banner__title\">\n\t\t\t\t\t{data?.title || data?.name || data.original_name}\n\t\t\t\t</h1>\n\t\t\t\t<div className=\"banner__buttons\">\n\t\t\t\t\t<button className=\"banner__button\">Play</button>\n\t\t\t\t\t<button className=\"banner__button\">My List</button>\n\t\t\t\t</div>\n\t\t\t\t<h1 className=\"banner__description\">\n\t\t\t\t\t{data.overview}\n\t\t\t\t</h1>\n\t\t\t</div>\n\t\t\t<div className=\"banner__fadeBottom\" />\n\t\t</header>\n\t);\n};\n\nexport default Banner;","//Tạo 1 biến lưu trữ các đường dẫn API\nconst requests = {\n    fetchTrending: `https://api.themoviedb.org/3/trending/all/week?api_key=c0cf4110241b44ed8625fe1ae1805076&language=en-US`,\n    fetchNetflixOriginals: `https://api.themoviedb.org/3/discover/tv?api_key=c0cf4110241b44ed8625fe1ae1805076&with_network=123`,\n    fetchTopRated: `https://api.themoviedb.org/3/movie/top_rated?api_key=c0cf4110241b44ed8625fe1ae1805076&language=en-US`,\n    fetchActionMovies: `https://api.themoviedb.org/3/discover/movie?api_key=c0cf4110241b44ed8625fe1ae1805076&with_genres=28`,\n    fetchComedyMovies: `https://api.themoviedb.org/3/discover/movie?api_key=c0cf4110241b44ed8625fe1ae1805076&with_genres=35`,\n    fetchHorrorMovies: `https://api.themoviedb.org/3/discover/movie?api_key=c0cf4110241b44ed8625fe1ae1805076&with_genres=27`,\n    fetchRomanceMovies: `https://api.themoviedb.org/3/discover/movie?api_key=c0cf4110241b44ed8625fe1ae1805076&with_genres=10749`,\n    fetchDocumentaries: `https://api.themoviedb.org/3/discover/movie?api_key=c0cf4110241b44ed8625fe1ae1805076&with_genres=99`,\n    fetchSearch: `https://api.themoviedb.org/3/search/movie?api_key=c0cf4110241b44ed8625fe1ae1805076&language=en-US`,\n}\nexport default requests;","import React from \"react\";\nimport YouTube from \"react-youtube\";\nimport \"./MovieDetail.css\";\n// các thuộc tính của video\nconst opts = {\n  height: \"400\",\n  width: \"100%\",\n  playerVars: {\n    autoplay: 0,\n  },\n};\n\nconst MovieDetail = ({ movieData, movieTrailer }) => {\n  // movieData và movieTrailer được chuyển vào từ component cha.\n  const {\n    release_date,\n    title,\n    name,\n    overview,\n    vote_average,\n    backdrop_path,\n    poster_path,\n  } = movieData;\n\n  //movieData được chuyển vào đúng, nó trả về một div rỗng.\n  if (!movieData) {\n    return <div></div>;\n  }\n\n  return (\n    <div className=\"movieDetailContainer\">\n      <div className=\"movieDetailDescription\">\n        <h2>{name || title}</h2>\n        <hr />\n        <h4>Release Date: {release_date}</h4>\n        <h4>Vote: {vote_average}/10</h4>\n        <p>{overview}</p>\n      </div>\n      <div className=\"movieDetailTrailer\">\n        {/* hiển thị video nếu có movieTrailer  */}\n        {movieTrailer && <YouTube videoId={movieTrailer} opts={opts} />}\n        {/* hiển thị poster nếu ko có movieTrailer */}\n        {!movieTrailer && (\n          <img\n            src={`https://image.tmdb.org/t/p/original${\n              backdrop_path || poster_path\n            }`}\n            alt={name}\n            className=\"trailerPoster\"\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetail;\n","import React, { useEffect, useState } from \"react\";\nimport movieTrailer from \"movie-trailer\";\nimport MovieDetail from \"../MovieDetail/MovieDetail\";\nimport \"./MovieList.css\";\n\n//Các props của component bao gồm title: tiêu đề của danh sách phim.\n//fetchUrl: URL để truy vấn API để lấy danh sách phim.\n//isLargeRow: một boolean để hiển thị kích thước poster lớn hơn.\nfunction MovieLists({ title, fetchUrl, isLargeRow }) {\n  //Danh sách các phim\n  const [movies, setMovies] = useState([]);\n  //Phim được chọn để xem trailer\n  const [selectingMovie, setSelectingMovie] = useState(null);\n  //ID của trailer tương ứng\n  const [trailerId, setTralerId] = useState(\"\");\n  // lấy danh sách phim từ API khi component được mount hoặc fetchUrl thay đổi.\n  useEffect(() => {\n    const fetchData = async () => {\n      const request = await fetch(fetchUrl);\n      const data = await request.json();\n      setMovies(data.results);\n      return request;\n    }\n    // async function fetchData() {\n    //   const request = await fetch(fetchUrl);\n    //   const data = await request.json();\n    //   setMovies(data.results);\n    //   return request;\n    // }\n    fetchData();\n  }, [fetchUrl]);\n  //Khi click vào poster, phim tương ứng sẽ được chọn để xem trailer\n  const handleClick = async (movie) => {\n    setSelectingMovie(movie);\n    //lấy URL của trailer tương ứng và lưu trữ trailerId vào state.\n    const url = await movieTrailer(movie?.original_name || movie?.title || \"\");\n    if (url) {\n      const urlParams = new URLSearchParams(new URL(url).search);\n      setTralerId(urlParams.get(\"v\"));\n    }\n  };\n\n  return (\n    <div className=\"movieList\">\n      <h1>{title}</h1>\n      <div className=\"movieList__posters\">\n        {movies.map((movie) => (\n          <img\n            key={movie.id}\n            onClick={() => handleClick(movie)}\n            className={`movieList__poster ${isLargeRow && \"movieList__posterLarge\"\n              }`}\n            src={`https://image.tmdb.org/t/p/original${isLargeRow ? movie.poster_path : movie.backdrop_path\n              }`}\n            alt={movie.name}\n          />\n        ))}\n      </div>\n      {/* Khi một poster được click, nếu trailerId đã được lưu trữ, thì component MovieDetail sẽ được hiển thị để xem trailer. */}\n      <div className=\"movieList__youtube\">\n        {!!selectingMovie && !!trailerId && (\n          <MovieDetail movieData={selectingMovie} movieTrailer={trailerId} />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default MovieLists;\n","import React from 'react';\nimport Navbar from '../../components/Navbar/Navbar';\nimport Banner from '../../components/Banner/Banner';\nimport requests from '../../requests';\nimport MovieList from '../../components/MovieList/MovieList';\nfunction Browse() {\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<Navbar/>\n\t\t\t<Banner />\n\t\t\t<MovieList title=\"Original\" fetchUrl={requests.fetchNetflixOriginals} isLargeRow/>\n\t\t\t<MovieList title=\"Xu hướng \" fetchUrl={requests.fetchTrending}/>\n\t\t\t<MovieList title=\"Xếp hạng cao\" fetchUrl={requests.fetchTopRated}/>\n\t\t\t<MovieList title=\"Hành động\" fetchUrl={requests.fetchActionMovies}/>\n\t\t\t<MovieList title=\"Hài\" fetchUrl={requests.fetchComedyMovies}/>\n\t\t\t<MovieList title=\"Kinh dị\" fetchUrl={requests.fetchHorrorMovies}/>\n\t\t\t<MovieList title=\"Lãng mạn\" fetchUrl={requests.fetchRomanceMovies}/>\n\t\t\t<MovieList title=\"Tài liệu\" fetchUrl={requests.fetchDocumentaries}/>\n\t\t</div>\n\t);\n}\n\nexport default Browse;\n\n","import React, { useState, useEffect } from \"react\";\nimport MovieDetail from \"../MovieDetail/MovieDetail\";\nimport \"./SearchResult.css\";\nimport requests from '../../requests'\nconst SearchResult = ({ search }) => {\n  // khai báo states\n  const [movies, setMovies] = useState([]);\n  const [videoTrailer, setVideoTrailer] = useState(null);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  // endpoint của search.\n  const url = `${requests.fetchSearch}&query=${search}`;\n\n  // effect tìm movie. Nếu ko search thì setMovies để rỗng\n  useEffect(() => {\n    async function fetchSearch() {\n      const request = await fetch(url)\n      const data = await request.json()\n      setMovies(data.results);\n      return request;\n    };\n\n    if (search) {\n      fetchSearch();\n    } else {\n      setMovies([]);\n    }\n  }, [url, search]);\n\n  // useEffect để fetch trailer từ selectedMovie\n  useEffect(() => {\n    async function fetchTrailer(movie) {\n      if (movie) {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/${movie.id}/videos?api_key=c0cf4110241b44ed8625fe1ae1805076&language=en-US`\n        ); // Sửa đường dẫn fetch API\n        const data = await response.json();\n        // Lọc ra các video có site là YouTube và type là Trailer hoặc Teaser\n        const trailers = data.results.filter(\n          (movie) =>\n            movie.site === \"YouTube\" &&\n            (movie.type === \"Teaser\" || movie.type === \"Trailer\")\n        );\n        console.log(trailers);\n        // Lấy key của video Trailer đầu tiên hoặc null nếu không có\n        if (trailers.length > 0) {\n          const trailer = trailers.find(\n            (video) => video.type === \"Trailer\" || video.key\n          );\n          if (trailer) {\n            setVideoTrailer(trailer.key);\n            console.log(trailer.key);\n          } else {\n            setVideoTrailer(null);\n          }\n        } else {\n          setVideoTrailer(null);\n        }\n      }\n    }\n\n    // Fetch trailer từ selectedMovie\n    fetchTrailer(selectedMovie);\n  }, [selectedMovie]);\n\n  // Xử lý sự kiện khi người dùng click vào poster để xem trailer\n  const handleClick = (movie) => {\n    if (selectedMovie && selectedMovie.id === movie.id) {\n      setVideoTrailer(null);\n      setSelectedMovie(null);\n    } else {\n      setSelectedMovie(movie);\n    }\n  };\n\n  return (\n    <div className=\"searchResult\">\n      <h2 className=\"searchTitle\">Search Result</h2>\n      <div className=\"moviePosterContainer\">\n        {/* hiển thị trailer */}\n        {selectedMovie && videoTrailer && (\n          <MovieDetail movieData={selectedMovie} movieTrailer={videoTrailer} />\n        )}\n        {selectedMovie && !videoTrailer && (\n          <MovieDetail movieData={selectedMovie} />\n        )}\n      </div>\n      <div className=\"row_posters searchResultContainer\">\n        {movies.map((movie) => {\n          return (\n            <div key={movie.id}>\n              <>\n                <img\n                  onClick={() => handleClick(movie)}\n                  className=\"searchMoviePoster\"\n                  src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`}\n                  alt={movie.name}\n                />\n              </>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default SearchResult;\n","import React, { useState } from \"react\";\nimport './Search.css'\nimport Navbar from \"../../components/Navbar/Navbar\";\nimport SearchResult from '../../components/SearchResult/SearchResult';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Search = () => {\n\tconst [query, setQuery] = useState(\"\");\n  const [searchInput, setSearchInput] = useState(\"\");\n\n  const handleSearch = (e) => {\n    //ngăn chặn hành vi submit form mặc định\n    e.preventDefault();\n    setQuery(searchInput);\n  };\n\n  const handleReset = (e) => {\n    e.preventDefault();\n    setSearchInput(\"\");\n    setQuery(\"\");\n  };\n\n  return (\n    <div className=\"search\">\n      <Navbar />\n      <div className=\"searchContainer\">\n        <form className=\"form\">\n          <div className=\"formInput\">\n            <input\n              className=\"input\"\n              type={\"text\"}\n              value={searchInput}\n              onChange={(e) => setSearchInput(e.target.value)}\n            />\n            <FontAwesomeIcon className=\"navBarSearch\" icon={faSearch} />\n          </div>\n          <div className=\"buttonContainer\">\n            <button\n              className=\"resetButton\"\n              type=\"button\"\n              onClick={(e) => {\n                handleReset(e);\n              }}\n            >\n              RESET\n            </button>\n            <button\n              className=\"searchButton\"\n              type=\"submit\"\n              onClick={(e) => handleSearch(e)}\n            >\n              SEARCH\n            </button>\n          </div>\n        </form>\n      </div>\n      <SearchResult search={query} />\n    </div>\n  );\n};\n\nexport default Search;\n","import React from 'react';\nimport {\n\tBrowserRouter,\n\tRoutes,\n\tRoute,\n} from \"react-router-dom\";\n\nimport Browse from './pages/browse/Browse';\nimport Search from './pages/search/Search';\n\n\nfunction App() {\n\treturn (\n\t\t<BrowserRouter>\n\t\t  <Routes>\n\t\t\t<Route path=\"/\" element={<Browse/>}/>\n\t\t\t<Route path=\"/search\" element={<Search/>}/>\n\t\t  </Routes>\n\t\t</BrowserRouter>\n\t  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}